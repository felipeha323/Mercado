// <auto-generated />
using System;
using Mercado.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mercado.Migrations
{
    [DbContext(typeof(MercadoContext))]
    partial class MercadoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mercado.Models.Apartamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bloque")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Piso")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadId");

                    b.ToTable("Apartamento");
                });

            modelBuilder.Entity("Mercado.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("Mercado.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Id_mercado")
                        .HasColumnType("int");

                    b.Property<string>("Id_producto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Mercado_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Mercado_Id");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Mercado.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("Mercado.Models.Mercado_", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PropietarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropietarioId");

                    b.ToTable("Mercado");
                });

            modelBuilder.Entity("Mercado.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Mercado.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompraId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("Mercado_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidad_de_Medida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("Mercado_Id");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Mercado.Models.Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartamentoID");

                    b.ToTable("Propietario");
                });

            modelBuilder.Entity("Mercado.Models.Unidad_Residencial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadId");

                    b.ToTable("Unidad_Residencial");
                });

            modelBuilder.Entity("Mercado.Models.Apartamento", b =>
                {
                    b.HasOne("Mercado.Models.Unidad_Residencial", "Unidad")
                        .WithMany("Apartamentos")
                        .HasForeignKey("UnidadId");
                });

            modelBuilder.Entity("Mercado.Models.Ciudad", b =>
                {
                    b.HasOne("Mercado.Models.Departamento", "Departamento")
                        .WithMany("Ciudades")
                        .HasForeignKey("DepartamentoId");
                });

            modelBuilder.Entity("Mercado.Models.Compra", b =>
                {
                    b.HasOne("Mercado.Models.Mercado_", null)
                        .WithMany("Compras")
                        .HasForeignKey("Mercado_Id");
                });

            modelBuilder.Entity("Mercado.Models.Departamento", b =>
                {
                    b.HasOne("Mercado.Models.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("PaisId");
                });

            modelBuilder.Entity("Mercado.Models.Mercado_", b =>
                {
                    b.HasOne("Mercado.Models.Propietario", "Propietario")
                        .WithMany("Mercados")
                        .HasForeignKey("PropietarioId");
                });

            modelBuilder.Entity("Mercado.Models.Producto", b =>
                {
                    b.HasOne("Mercado.Models.Compra", null)
                        .WithMany("Productos")
                        .HasForeignKey("CompraId");

                    b.HasOne("Mercado.Models.Mercado_", null)
                        .WithMany("Productos")
                        .HasForeignKey("Mercado_Id");
                });

            modelBuilder.Entity("Mercado.Models.Propietario", b =>
                {
                    b.HasOne("Mercado.Models.Apartamento", "Apartamento")
                        .WithMany("Propietarios")
                        .HasForeignKey("ApartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mercado.Models.Unidad_Residencial", b =>
                {
                    b.HasOne("Mercado.Models.Ciudad", "Ciudad")
                        .WithMany("unidad_Residenciales")
                        .HasForeignKey("CiudadId");
                });
#pragma warning restore 612, 618
        }
    }
}
